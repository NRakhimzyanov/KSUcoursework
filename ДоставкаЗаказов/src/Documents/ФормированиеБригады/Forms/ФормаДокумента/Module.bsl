
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВодительНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	СвободныеВодители 		= СвободныеВодителиЗапрос(Объект.Дата);
	ОбщегоНазначенияКлиент.ФормированиеИОткрытиеФормы(СвободныеВодители, "Справочник.Водители.ФормаВыбора", Элементы.Водитель, "Наименование");			
	
КонецПроцедуры

&НаКлиенте
Процедура ТранспортНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	СвободныйТранспорт 		= СвободныйТранспорт(Объект.Дата);
	ОбщегоНазначенияКлиент.ФормированиеИОткрытиеФормы(СвободныйТранспорт, "Справочник.ТранспортныеСредства.ФормаВыбора", Элементы.Транспорт, "РегистрационныйНомер");	
    
КонецПроцедуры

&НаКлиенте
Процедура ГрузчикПервыйНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	СвободныеГрузчики 		= ДобавитьРанееВведенногоГрузчика();
	ОбщегоНазначенияКлиент.ФормированиеИОткрытиеФормы(СвободныеГрузчики, "Справочник.Грузчики.Форма.ФормаВыбора", Элементы.ГрузчикПервый, "Наименование");
    
КонецПроцедуры

&НаКлиенте
Процедура ГрузчикВторойНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	СвободныеГрузчики 		= ДобавитьРанееВведенногоГрузчика();
	ОбщегоНазначенияКлиент.ФормированиеИОткрытиеФормы(СвободныеГрузчики, "Справочник.Грузчики.Форма.ФормаВыбора", Элементы.ГрузчикВторой, "Наименование");
    
КонецПроцедуры

&НаКлиенте
Процедура ВодительОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка 	= Ложь;
    Объект.Водитель 		= ВыбранноеЗначение;
    
КонецПроцедуры

&НаКлиенте
Процедура ТранспортОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка 	= Ложь;
    Объект.Транспорт 		= ВыбранноеЗначение;
    Объект.НачальныйПробег 	= ПробегТранспорта(Объект.Транспорт);
    
КонецПроцедуры

&НаКлиенте
Процедура ГрузчикПервыйОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка) Экспорт
   
    СтандартнаяОбработка 	= Ложь;
    Объект.ГрузчикПервый 	= ВыбранноеЗначение;
    
КонецПроцедуры

&НаКлиенте
Процедура ГрузчикВторойОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка 	= Ложь;
    Объект.ГрузчикВторой 	= ВыбранноеЗначение;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СвободныеВодителиЗапрос(Дата)
	
	СвободныеВодители = Новый СписокЗначений;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Водители.Наименование КАК Наименование
		|ИЗ
		|	Справочник.Водители КАК Водители
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставБригады.СрезПоследних(, Период МЕЖДУ &ДатаНачала И &ДатаОкончания) КАК
		|			СоставБригадыСрезПоследних
		|		ПО СоставБригадыСрезПоследних.Водитель = Водители.Ссылка
		|ГДЕ
		|	СоставБригадыСрезПоследних.Водитель ЕСТЬ NULL";
		
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	РезультатЗапроса 		= Запрос.Выполнить();
	
	Текст = "Все водители распределены по бригадам";
	Выборка = ОбщегоНазначенияВызовСервера.ПроверкаРезультатаЗапроса(РезультатЗапроса, Текст);
	СвободныеВодители = ОбщегоНазначенияВызовСервера.ФормированиеСтруктурыОтбора(Выборка, Выборка.Наименование);
		
	Возврат СвободныеВодители;	
		
КонецФункции

&НаСервереБезКонтекста
Функция СвободныйТранспорт(Дата)
	
	СвободныйТранспорт = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТранспортныеСредства.Наименование КАК Наименование,
		|	ТранспортныеСредства.РегистрационныйНомер
		|ИЗ
		|	Справочник.ТранспортныеСредства КАК ТранспортныеСредства
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставБригады.СрезПоследних(, Период МЕЖДУ &ДатаНачала И &ДатаОкончания) КАК СоставБригадыСрезПоследних
		|		ПО СоставБригадыСрезПоследних.Транспорт = ТранспортныеСредства.Ссылка
		|ГДЕ
		|	СоставБригадыСрезПоследних.Транспорт ЕСТЬ NULL";
		
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	РезультатЗапроса 		= Запрос.Выполнить();
	
	Текст = "Весь транспорт распределен по бригадам";
	Выборка = ОбщегоНазначенияВызовСервера.ПроверкаРезультатаЗапроса(РезультатЗапроса, Текст);
	СвободныйТранспорт = ОбщегоНазначенияВызовСервера.ФормированиеСтруктурыОтбора(Выборка, Выборка.РегистрационныйНомер);
	
	Возврат СвободныйТранспорт;	

КонецФункции

&НаСервереБезКонтекста
Функция СвободныеГрузчики(Дата)
	
	СвободныеГрузчики = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Грузчики.Ссылка,
	|	Грузчики.Наименование
	|ПОМЕСТИТЬ ВТГрузчики
	|ИЗ
	|	Справочник.Грузчики КАК Грузчики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставБригады.СрезПоследних(, Период МЕЖДУ &ДатаНачала И &ДатаОкончания) КАК СоставБригадыСрезПоследних
	|		ПО СоставБригадыСрезПоследних.ГрузчикПервый = Грузчики.Ссылка
	|ГДЕ
	|	СоставБригадыСрезПоследних.ГрузчикПервый ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТГрузчики.Наименование
	|ИЗ
	|	ВТГрузчики КАК ВТГрузчики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставБригады.СрезПоследних(, Период МЕЖДУ &ДатаНачала И &ДатаОкончания) КАК СоставБригадыСрезПоследних
	|		ПО СоставБригадыСрезПоследних.ГрузчикВторой = ВТГрузчики.Ссылка
	|ГДЕ
	|	СоставБригадыСрезПоследних.ГрузчикВторой ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
	РезультатЗапроса 		= Запрос.Выполнить();
	
	Текст = "Все грузчики распределены по бригадам";
	Выборка = ОбщегоНазначенияВызовСервера.ПроверкаРезультатаЗапроса(РезультатЗапроса, Текст);
	СвободныеГрузчики = ОбщегоНазначенияВызовСервера.ФормированиеСтруктурыОтбора(Выборка, Выборка.Наименование);
	
	Возврат СвободныеГрузчики;	
	
КонецФункции

&НаКлиенте
Функция ДобавитьРанееВведенногоГрузчика()
	
	СвободныеГрузчики = СвободныеГрузчики(Объект.Дата);
	СвободныеГрузчики = ПроверитьНаличиеГрузчикаВДокументе(СвободныеГрузчики, Объект.ГрузчикПервый);
	СвободныеГрузчики = ПроверитьНаличиеГрузчикаВДокументе(СвободныеГрузчики, Объект.ГрузчикВторой);	
	
	Если СвободныеГрузчики.Количество() = 0 Тогда
		Текст = "Все грузчики распределены по бригадам";
		ОбщегоНазначенияКлиент.СообщениеПользователюКлиент(Текст);
	КонецЕсли;
	
	Возврат	СвободныеГрузчики;
		
КонецФункции

&НаКлиенте
Функция ПроверитьНаличиеГрузчикаВДокументе(НаименованиеСтруктуры, ОбъектНаименование)
	
	ВведенныйРанееГрузчик = НаименованиеСтруктуры.НайтиПоЗначению(Строка(ОбъектНаименование));
	
	Если ЗначениеЗаполнено(ОбъектНаименование) И ВведенныйРанееГрузчик <> Неопределено Тогда
		НаименованиеСтруктуры.Удалить(ВведенныйРанееГрузчик);
	КонецЕсли;
		
	Возврат	НаименованиеСтруктуры;
		
КонецФункции

&НаСервереБезКонтекста
Функция ПробегТранспорта(Транспорт)

	НачальныйПробег = РегистрыНакопления.ПробегТранспорта.ПробегТранспорта(Транспорт);
	Возврат НачальныйПробег; 
	
КонецФункции

#КонецОбласти

