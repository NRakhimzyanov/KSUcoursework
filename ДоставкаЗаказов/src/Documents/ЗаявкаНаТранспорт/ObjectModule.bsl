#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения,СтандартнаяОбработка)
	
	ЗаписиЗаполнения = ДанныеЗаполнения(ДанныеЗаполнения);
	ЗаписатьДанныеЗаполнения(ЗаписиЗаполнения);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Условие = (Расстояние = 0);
	ТранспортныйОтделВызовСервера.ПроверитьУсловие(Отказ, Условие, "Поле Расстояние должно быть заполнено");	
	
	Условие = ДатаДоставки < ТекущаяДатаСеанса();
	ТранспортныйОтделВызовСервера.ПроверитьУсловие(Отказ, Условие, "Дата плановой доставки не может быть в прошедшем периоде");		
	
	Условие = НЕ ЗначениеЗаполнено(Контрагент);
	ТранспортныйОтделВызовСервера.ПроверитьУсловие(Отказ, Условие, "Поле Контрагент должно быть заполнено");			
	
	Условие = НЕ ЗначениеЗаполнено(КонтактноеЛицо);
	ТранспортныйОтделВызовСервера.ПроверитьУсловие(Отказ, Условие, "Поле Контакное лицо должно быть заполнено");				
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		НепроверяемыеРеквизиты = Новый Массив();
	
	Если СостояниеЗаказа = Перечисления.СостояниеЗаказа.НеВыехали Тогда
		НепроверяемыеРеквизиты.Добавить("Транспорт");
		НепроверяемыеРеквизиты.Добавить("НачальныйПробег");
		НепроверяемыеРеквизиты.Добавить("Водитель");
		НепроверяемыеРеквизиты.Добавить("ГрузчикПервый");
		НепроверяемыеРеквизиты.Добавить("ГрузчикВторой");
	КонецЕсли;
	ОбщегоНазначенияВызовСервера.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)

	ЗаписиДвижений = ДанныеДвижений(Отказ);
	ЗаписатьДвижения(ЗаписиДвижений);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДвижений(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявкаНаТранспорт.Дата КАК Период,
		|	ЗаявкаНаТранспорт.Транспорт КАК Транспорт,
		|	ЗаявкаНаТранспорт.Водитель КАК Водитель,
		|	ЗаявкаНаТранспорт.ГрузчикПервый КАК ГрузчикПервый,
		|	ЗаявкаНаТранспорт.ГрузчикВторой КАК ГрузчикВторой,
		|	ЗаявкаНаТранспорт.СостояниеЗаказа КАК СостояниеЗаказа,
		|	ЗаявкаНаТранспорт.Расстояние КАК Расстояние,
		|	ЗаявкаНаТранспорт.НачальныйПробег,
		|	ЗаявкаНаТранспорт.КонтактноеЛицо.Адрес КАК АдресДоставки,
		|	1 КАК Рейсы
		|ИЗ
		|	Документ.ЗаявкаНаТранспорт КАК ЗаявкаНаТранспорт
		|ГДЕ
		|	ЗаявкаНаТранспорт.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
	КонецЕсли;
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

Процедура ЗаписатьДвижения(ВыборкаДетальныеЗаписи)
	
	Если СостояниеЗаказа = Перечисления.СостояниеЗаказа.НеВыехали Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ПробегТранспорта.Записывать 	= Истина;
	Движения.СостояниеДоставки.Записывать 	= Истина;
	
	ВыборкаДетальныеЗаписи.Следующий();	
	
	Движение = Движения.СостояниеДоставки.Добавить();
	ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);	
	
	Если ВыборкаДетальныеЗаписи.СостояниеЗаказа <> Перечисления.СостояниеЗаказа.Отработан Тогда
		Возврат;
	КонецЕсли;
	
	Движение = Движения.ПробегТранспорта.Добавить();
	ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
	
КонецПроцедуры

Функция ДанныеЗаполнения(ДанныеЗаполнения)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПродажаТоваров") Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ПродажаТоваров.Ссылка КАК Основание,
			|	ПродажаТоваров.Контрагент,
			|	ПродажаТоваров.КонтактноеЛицо,
			|	ПродажаТоваров.СуммаДокумента,
			|	ПродажаТоваров.КонтактноеЛицо.Адрес КАК Адрес
			|ИЗ
			|	Документ.ПродажаТоваров КАК ПродажаТоваров
			|ГДЕ
			|	ПродажаТоваров.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		РезультатЗапроса = Запрос.Выполнить();
			
	Возврат РезультатЗапроса;

	КонецЕсли;
	
КонецФункции

Процедура ЗаписатьДанныеЗаполнения(РезультатЗапроса)
	
	Если НЕ ЗначениеЗаполнено(РезультатЗапроса) Тогда
		Текст = "Ввод Заявки на транспорт не возможен! 
				|Документ основание не заполнен";
		ОбщегоНазначенияВызовСервера.СообщитьПользователюСервер(Текст);
		Возврат;
	КонецЕсли;
		
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();		
	ВыборкаДетальныеЗаписи.Следующий(); 
	
	Если ВыборкаДетальныеЗаписи.СуммаДокумента < 1000 Тогда
		Текст = "Ввод Заявки на транспорт не возможен! 
				|Сумма заказа менее 1000 рублей!";
		ОбщегоНазначенияВызовСервера.СообщитьПользователюСервер(Текст);
		Возврат;
	КонецЕсли;
		
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаДетальныеЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Иначе
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли