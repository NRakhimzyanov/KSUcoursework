#Область ПрограммныйИнтерфейс

// Получить цену покупки номенклатуры.
// 
// Параметры:
//  Дата - Дата
//  Контрагент - СправочникСсылка
//  Номенклатура - СправочникСсылка
// 
// Возвращаемое значение:
//  Число
Функция ПолучитьЦенуПокупкиНоменклатуры(Дата, Контрагент, Номенклатура) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Дата", 			Дата);
	Запрос.УстановитьПараметр("Контрагент", 	Контрагент);
	Запрос.УстановитьПараметр("Номенклатура", 	Номенклатура);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Цена
	|ИЗ
	|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(&Дата, 
	|													Контрагент 		= &Контрагент 
	|												    И Номенклатура 	= &Номенклатура)
	|";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ЕСТЬNULL(Номенклатура.ЦенаПокупки, 0) КАК Цена
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка = &Номенклатура";
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Цена;
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Цена;
		
	КонецЕсли;
	
КонецФункции

// Получить цену продажи номенклатуры.
// 
// Параметры:
//  Номенклатура - СправочникСсылка
// 
// Возвращаемое значение:
//  Число
Функция ПолучитьЦенуПродажиНоменклатуры(Номенклатура) Экспорт
	
	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Номенклатура", 	Номенклатура);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(Номенклатура.ЦенаПродажи, 0) КАК Цена
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Цена;
	
КонецФункции

// Сообщение пользователю.
// 
// Параметры:
// Текст - Строка.
Процедура СообщениеПользователюСервер(Текст) Экспорт
	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = (Текст);
	Сообщение.Сообщить();
	
КонецПроцедуры

// Проверка результата запроса.
// 
// Параметры:
// РезультатЗапроса - Структура.
// Текст - Строка.
// 
// Возвращаемое значение:
// Структура 
Функция ПроверкаРезультатаЗапроса(РезультатЗапроса, Текст) Экспорт
	Если РезультатЗапроса.Пустой() Тогда
		СообщениеПользователюСервер(Текст);
	КонецЕсли;
	
	Выборка	= РезультатЗапроса.Выбрать();
	Возврат Выборка;
		
КонецФункции

// Проверка результата запроса.
// 
// Параметры:
// Выборка - Структура.
// Параметр - СправочникСсылка
// 
// Возвращаемое значение:
// СписокЗначений.
// СтрокаТаблицыЗначений.
Функция ФормированиеСтруктурыОтбора(Выборка, Параметр) Экспорт
	
	НаименованиеСтруктуры = Новый СписокЗначений;
	Пока Выборка.Следующий() Цикл
		НаименованиеСтруктуры.Добавить(Строка(Параметр));
	КонецЦикла;
	
	Возврат НаименованиеСтруктуры;	
	
КонецФункции

// Проверка условий.
// 
// Параметры:
// Отказ - Булево.
// Условие - Булево.
// Текст - Строка.
Процедура ПроверкаУсловий (Отказ, Условие, Текст) Экспорт
	
	Если Условие Тогда 
		СообщениеПользователюСервер(Текст);
		Отказ = Истина;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти
